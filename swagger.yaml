openapi: "3.0.0"
info:
  title: Star Wars Films API
  version: 1.0.0
servers:
  - url: "http://localhost:3000/api/v1"
    description: Local development server
paths:
  /films:
    get:
      summary: Retrieve a list of films from the Star Wars universe
      description: This endpoint returns a paginated list of Star Wars films, including details like title, episode ID, characters, and more.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number of the results to fetch.
      responses:
        200:
          description: A list of films with details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilmListResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /films/{id}:
    get:
      summary: Retrieve a specific film by ID
      description: This endpoint returns detailed information about a specific Star Wars film identified by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Unique ID of the film to retrieve
      responses:
        200:
          description: Detailed information about the film
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pairsAndNames:
    get:
      summary: "Retrieve pairs and names data"
      description: "Returns data about most frequent characters and counted pairs."
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PairsAndNamesResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /people:
    get:
      summary: Retrieve a list of characters from the Star Wars universe
      description: This endpoint returns a paginated list of Star Wars characters, including details like name, height, mass, and more.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number of the results to fetch.
      responses:
        200:
          description: A list of characters with details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeopleListResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /people/{id}:
    get:
      summary: Retrieve a specific character by ID
      description: This endpoint returns detailed information about a specific Star Wars character identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique ID of the character to retrieve
      responses:
        200:
          description: Detailed information about the character
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /planets:
    get:
      summary: Retrieve a list of planets from the Star Wars universe
      description: This endpoint returns a paginated list of Star Wars planets, including details like name, climate, terrain, and more.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number of the results to fetch.
      responses:
        200:
          description: A list of planets with details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanetsListResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /planets/{id}:
    get:
      summary: Retrieve a specific planet by ID
      description: This endpoint returns detailed information about a specific Star Wars planet identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique ID of the planet to retrieve
      responses:
        200:
          description: Detailed information about the planet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Planet"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /species:
    get:
      summary: Retrieve a list of species from the Star Wars universe
      description: This endpoint returns a paginated list of Star Wars species, including details like name, classification, designation, and more.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number of the results to fetch.
      responses:
        200:
          description: A list of species with details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpeciesListResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /species/{id}:
    get:
      summary: Retrieve a specific specie by ID
      description: This endpoint returns detailed information about a specific Star Wars specie identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique ID of the specie to retrieve
      responses:
        200:
          description: Detailed information about the specie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Species"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /starships:
    get:
      summary: Retrieve a list of starships from the Star Wars universe
      description: This endpoint returns a paginated list of Star Wars starships, including details like name, model, manufacturer, and more.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number of the results to fetch.
      responses:
        200:
          description: A list of starships with details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StarshipsListResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /starships/{id}:
    get:
      summary: Retrieve a specific starship by ID
      description: This endpoint returns detailed information about a specific Star Wars starship identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique ID of the starship to retrieve
      responses:
        200:
          description: Detailed information about the starship
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Starship"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicles:
    get:
      summary: Retrieve a list of vehicles from the Star Wars universe
      description: This endpoint returns a paginated list of Star Wars vehicles, including details like name, model, manufacturer, and more.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number of the results to fetch.
      responses:
        200:
          description: A list of vehicles with details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehiclesListResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vehicles/{id}:
    get:
      summary: Retrieve a specific vehicle by ID
      description: This endpoint returns detailed information about a specific Star Wars vehicle identified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique ID of the vehicle to retrieve
      responses:
        200:
          description: Detailed information about the vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    FilmListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 6
          description: The total number of films available
        next:
          type: string
          nullable: true
          example: null
          description: URL to the next page (if available)
        previous:
          type: string
          nullable: true
          example: null
          description: URL to the previous page (if available)
        results:
          type: array
          items:
            $ref: "#/components/schemas/Film"
    Film:
      type: object
      properties:
        title:
          type: string
          example: "A New Hope"
          description: The title of the film
        episode_id:
          type: integer
          example: 4
          description: The episode number of the film
        opening_crawl:
          type: string
          example: "It is a period of civil war..."
          description: The opening crawl text of the film
        director:
          type: string
          example: "George Lucas"
          description: The director of the film
        producer:
          type: string
          example: "Gary Kurtz, Rick McCallum"
          description: The producer(s) of the film
        release_date:
          type: string
          format: date
          example: "1977-05-25"
          description: The release date of the film
        characters:
          type: array
          items:
            type: string
            example: "https://swapi.dev/api/people/1/"
            description: URL to a character in the film
        planets:
          type: array
          items:
            type: string
            example: "https://swapi.dev/api/planets/1/"
            description: URL to a planet featured in the film
        starships:
          type: array
          items:
            type: string
            example: "https://swapi.dev/api/starships/2/"
            description: URL to a starship featured in the film
        vehicles:
          type: array
          items:
            type: string
            example: "https://swapi.dev/api/vehicles/4/"
            description: URL to a vehicle featured in the film
        species:
          type: array
          items:
            type: string
            example: "https://swapi.dev/api/species/1/"
            description: URL to a species featured in the film
        created:
          type: string
          format: date-time
          example: "2014-12-10T14:23:31.880000Z"
          description: Timestamp of when the film entry was created
        edited:
          type: string
          format: date-time
          example: "2014-12-20T19:49:45.256000Z"
          description: Timestamp of the last edit to the film entry
        url:
          type: string
          format: uri
          example: "https://swapi.dev/api/films/1/"
          description: URL to the detailed information of the film
    PairsAndNamesResponse:
      type: object
      properties:
        mostFrequentCharacter:
          type: array
          items:
            type: string
          example:
            - "Luke Skywalker"
            - "Dooku"
        countedPairs:
          type: object
          additionalProperties:
            type: integer
          example:
            it: 3
            is: 7
            a: 9
    PeopleListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 6
          description: The total number of characters available
        next:
          type: string
          nullable: true
          example: null
          description: URL to the next page (if available)
        previous:
          type: string
          nullable: true
          example: null
          description: URL to the previous page (if available)
        results:
          type: array
          items:
            $ref: "#/components/schemas/Person"
    Person:
      type: object
      properties:
        name:
          type: string
          example: "Luke Skywalker"
          description: The name of the person
        height:
          type: string
          example: "172"
          description: The height of the person in centimeters
        mass:
          type: string
          example: "77"
          description: The mass of the person in kilograms
        hair_color:
          type: string
          example: "blond"
          description: The hair color of the person
        skin_color:
          type: string
          example: "fair"
          description: The skin color of the person
        eye_color:
          type: string
          example: "blue"
          description: The eye color of the person
        birth_year:
          type: string
          example: "19BBY"
          description: The birth year of the person
        gender:
          type: string
          example: "male"
          description: The gender of the person
        homeworld:
          type: string
          format: uri
          example: "https://swapi.dev/api/planets/1/"
          description: The URL of the homeworld of the person
        films:
          type: array
          items:
            type: string
            format: uri
          example:
            ["https://swapi.dev/api/films/1/", "https://swapi.dev/api/films/2/"]
          description: An array of URLs of films in which the person has appeared
        species:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs of species the person belongs to
        vehicles:
          type: array
          items:
            type: string
            format: uri
          example: ["https://swapi.dev/api/vehicles/14/"]
          description: An array of URLs of vehicles driven by the person
        starships:
          type: array
          items:
            type: string
            format: uri
          example: ["https://swapi.dev/api/starships/12/"]
          description: An array of URLs of starships piloted by the person
        created:
          type: string
          format: date-time
          example: "2014-12-09T13:50:51.644000Z"
          description: The ISO 8601 date format of the time that this resource was created
        edited:
          type: string
          format: date-time
          example: "2014-12-20T21:17:56.891000Z"
          description: The ISO 8601 date format of the time that this resource was last edited
        url:
          type: string
          format: uri
          example: "https://swapi.dev/api/people/1/"
          description: The URL of this specific person resource
    PlanetsListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 60
          description: The total number of planets available
        next:
          type: string
          nullable: true
          example: "https://swapi.dev/api/planets/?page=2"
          description: URL to the next page (if available)
        previous:
          type: string
          nullable: true
          example: null
          description: URL to the previous page (if available)
        results:
          type: array
          items:
            $ref: "#/components/schemas/Planet"
    Planet:
      type: object
      properties:
        name:
          type: string
          example: "Tatooine"
          description: The name of the planet
        rotation_period:
          type: string
          example: "23"
          description: The rotation period of the planet in hours
        orbital_period:
          type: string
          example: "304"
          description: The orbital period of the planet in days
        diameter:
          type: string
          example: "10465"
          description: The diameter of the planet in kilometers
        climate:
          type: string
          example: "arid"
          description: The climate of the planet
        gravity:
          type: string
          example: "1 standard"
          description: The gravity of the planet
        terrain:
          type: string
          example: "desert"
          description: The terrain of the planet
        surface_water:
          type: string
          example: "1"
          description: The percentage of the planet surface that is water
        population:
          type: string
          example: "200000"
          description: The population of the planet
        residents:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to the residents of the planet
        films:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to the films in which the planet has appeared
        created:
          type: string
          format: date-time
          example: "2014-12-09T13:50:49.641000Z"
          description: The ISO 8601 date format of the time that this resource was created
        edited:
          type: string
          format: date-time
          example: "2014-12-20T20:58:18.411000Z"
          description: The ISO 8601 date format of the time that this resource was last edited
        url:
          type: string
          format: uri
          example: "https://swapi.dev/api/planets/1/"
          description: The URL of this specific planet resource
    SpeciesListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 37
          description: The total number of species available
        next:
          type: string
          nullable: true
          example: "https://swapi.dev/api/species/?page=2"
          description: URL to the next page (if available)
        previous:
          type: string
          nullable: true
          example: null
          description: URL to the previous page (if available)
        results:
          type: array
          items:
            $ref: "#/components/schemas/Species"
    Species:
      type: object
      properties:
        name:
          type: string
          example: "Human"
          description: The name of the species
        classification:
          type: string
          example: "mammal"
          description: The classification of the species
        designation:
          type: string
          example: "sentient"
          description: The designation of the species
        average_height:
          type: string
          example: "180"
          description: The average height of the species in centimeters
        skin_colors:
          type: string
          example: "caucasian, black, asian, hispanic"
          description: The common skin colors of the species
        hair_colors:
          type: string
          example: "blonde, brown, black, red"
          description: The common hair colors of the species
        eye_colors:
          type: string
          example: "brown, blue, green, hazel, grey, amber"
          description: The common eye colors of the species
        average_lifespan:
          type: string
          example: "120"
          description: The average lifespan of the species in years
        homeworld:
          type: string
          format: uri
          example: "https://swapi.dev/api/planets/9/"
          description: The URL of the homeworld of the species
        language:
          type: string
          example: "Galactic Basic"
          description: The language commonly spoken by the species
        people:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to the people belonging to the species
        films:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to the films in which the species has appeared
        created:
          type: string
          format: date-time
          example: "2014-12-10T13:52:11.567000Z"
          description: The ISO 8601 date format of the time that this resource was created
        edited:
          type: string
          format: date-time
          example: "2014-12-20T21:36:42.136000Z"
          description: The ISO 8601 date format of the time that this resource was last edited
        url:
          type: string
          format: uri
          example: "https://swapi.dev/api/species/1/"
          description: The URL of this specific species resource
    StarshipsListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 36
          description: The total number of starships available
        next:
          type: string
          nullable: true
          example: "https://swapi.dev/api/starships/?page=2"
          description: URL to the next page (if available)
        previous:
          type: string
          nullable: true
          example: null
          description: URL to the previous page (if available)
        results:
          type: array
          items:
            $ref: "#/components/schemas/Starship"
    Starship:
      type: object
      properties:
        name:
          type: string
          example: "CR90 corvette"
          description: The name of the starship
        model:
          type: string
          example: "CR90 corvette"
          description: The model of the starship
        manufacturer:
          type: string
          example: "Corellian Engineering Corporation"
          description: The manufacturer of the starship
        cost_in_credits:
          type: string
          example: "3500000"
          description: The cost of the starship in galactic credits
        length:
          type: string
          example: "150"
          description: The length of the starship in meters
        max_atmosphering_speed:
          type: string
          example: "950"
          description: The maximum speed of the starship in the atmosphere
        crew:
          type: string
          example: "30-165"
          description: The number of personnel required to operate the starship
        passengers:
          type: string
          example: "600"
          description: The number of passengers the starship can carry
        cargo_capacity:
          type: string
          example: "3000000"
          description: The cargo capacity of the starship in kilograms
        consumables:
          type: string
          example: "1 year"
          description: The duration for which the starship can provide consumables for its crew without resupply
        hyperdrive_rating:
          type: string
          example: "2.0"
          description: The class of the starship's hyperdrive
        MGLT:
          type: string
          example: "60"
          description: The Megalight per hour travel speed of the starship
        starship_class:
          type: string
          example: "corvette"
          description: The class of the starship
        pilots:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs of pilots that pilot this starship
        films:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to the films in which the starship has appeared
        created:
          type: string
          format: date-time
          example: "2014-12-10T14:20:33.369000Z"
          description: The ISO 8601 date format of the time that this resource was created
        edited:
          type: string
          format: date-time
          example: "2014-12-20T21:23:49.867000Z"
          description: The ISO 8601 date format of the time that this resource was last edited
        url:
          type: string
          format: uri
          example: "https://swapi.dev/api/starships/2/"
          description: The URL of this specific starship resource
    VehiclesListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 39
          description: The total number of vehicles available
        next:
          type: string
          nullable: true
          example: "https://swapi.dev/api/vehicles/?page=2"
          description: URL to the next page (if available)
        previous:
          type: string
          nullable: true
          example: null
          description: URL to the previous page (if available)
        results:
          type: array
          items:
            $ref: "#/components/schemas/Vehicle"
    Vehicle:
      type: object
      properties:
        name:
          type: string
          example: "Sand Crawler"
          description: The name of the vehicle
        model:
          type: string
          example: "Digger Crawler"
          description: The model of the vehicle
        manufacturer:
          type: string
          example: "Corellia Mining Corporation"
          description: The manufacturer of the vehicle
        cost_in_credits:
          type: string
          example: "150000"
          description: The cost of the vehicle in galactic credits
        length:
          type: string
          example: "36.8"
          description: The length of the vehicle in meters
        max_atmosphering_speed:
          type: string
          example: "30"
          description: The maximum speed of the vehicle in the atmosphere
        crew:
          type: string
          example: "46"
          description: The number of personnel required to operate the vehicle
        passengers:
          type: string
          example: "30"
          description: The number of passengers the vehicle can carry
        cargo_capacity:
          type: string
          example: "50000"
          description: The cargo capacity of the vehicle in kilograms
        consumables:
          type: string
          example: "2 months"
          description: The duration for which the vehicle can provide consumables for its crew without resupply
        vehicle_class:
          type: string
          example: "wheeled"
          description: The class of the vehicle
        pilots:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs of pilots that pilot this vehicle
        films:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to the films in which the vehicle has appeared
        created:
          type: string
          format: date-time
          example: "2014-12-10T15:36:25.724000Z"
          description: The ISO 8601 date format of the time that this resource was created
        edited:
          type: string
          format: date-time
          example: "2014-12-20T21:30:21.661000Z"
          description: The ISO 8601 date format of the time that this resource was last edited
        url:
          type: string
          format: uri
          example: "https://swapi.dev/api/vehicles/4/"
          description: The URL of this specific vehicle resource
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error fetching data"
          description: A message describing the error
        error:
          type: string
          example: "Cannot find that URL"
          description: A more detailed error message
